// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Liquidity Mining FAQ screen should match snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "paddingBottom": 32,
      "paddingLeft": 24,
      "paddingRight": 24,
      "paddingTop": 24,
    }
  }
  style={
    Array [
      undefined,
      Object {
        "backgroundColor": "rgba(245, 245, 245, 1)",
      },
    ]
  }
  testID="liquidity_mining_faq"
>
  <View>
    <Text
      style={
        Array [
          Object {
            "fontFamily": "RegularFont",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          Array [
            Object {
              "fontFamily": "SemiBoldFont",
              "fontSize": 18,
              "fontWeight": "600",
              "lineHeight": 28,
            },
            Object {
              "color": "rgba(0, 0, 0, 1)",
            },
          ],
        ]
      }
    >
      Liquidity Mining
    </Text>
    <Text
      style={
        Array [
          Object {
            "fontFamily": "RegularFont",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          Array [
            Object {
              "fontSize": 14,
              "lineHeight": 20,
              "marginTop": 8,
            },
            Object {
              "color": "rgba(0, 0, 0, 1)",
            },
          ],
        ]
      }
    >
      Liquidity mining is a DeFi mechanism in which participants supply cryptocurrencies into liquidity pools, and in turn be rewarded with fees and tokens based on their share of the total pool liquidity.

Liquidity pools in DeFiChain consist of liquidity in pairs of coins, used by the DeFiChain DEX (Decentralized Exchange).
    </Text>
    <RCTScrollView
      style={
        Array [
          undefined,
          Object {
            "backgroundColor": "rgba(245, 245, 245, 1)",
          },
        ]
      }
      testID="recovery_words_faq_accordion"
    >
      <View>
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "fontFamily": "MediumFont",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "lineHeight": 16,
                  "marginTop": 32,
                },
                Object {
                  "color": "rgba(163, 163, 163, 1)",
                },
              ],
            ]
          }
          text="FREQUENTLY ASKED QUESTIONS"
        >
          FREQUENTLY ASKED QUESTIONS
        </Text>
        <View
          style={
            Array [
              Object {
                "borderBottomLeftRadius": 8,
                "borderBottomRightRadius": 8,
                "borderBottomWidth": 1,
                "borderLeftWidth": 1,
                "borderRightWidth": 1,
                "borderTopLeftRadius": 8,
                "borderTopRightRadius": 8,
                "borderTopWidth": 1,
                "marginTop": 8,
                "overflow": "hidden",
              },
              Object {
                "backgroundColor": "rgba(255, 255, 255, 1)",
                "borderBottomColor": "rgba(229, 229, 229, 1)",
                "borderLeftColor": "rgba(229, 229, 229, 1)",
                "borderRightColor": "rgba(229, 229, 229, 1)",
                "borderTopColor": "rgba(229, 229, 229, 1)",
              },
            ]
          }
        >
          <View
            style={Object {}}
          >
            <View
              accessibilityState={
                Object {
                  "expanded": true,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                      false,
                      Object {
                        "paddingBottom": 4,
                      },
                    ],
                    Object {
                      "borderBottomColor": "rgba(229, 229, 229, 1)",
                      "borderLeftColor": "rgba(229, 229, 229, 1)",
                      "borderRightColor": "rgba(229, 229, 229, 1)",
                      "borderTopColor": "rgba(229, 229, 229, 1)",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "fontFamily": "RegularFont",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "lineHeight": 24,
                      },
                      Array [
                        Array [
                          Object {
                            "flexBasis": "0%",
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "fontSize": 14,
                            "lineHeight": 20,
                          },
                          Object {
                            "fontFamily": "SemiBoldFont",
                            "fontWeight": "600",
                          },
                        ],
                        Object {
                          "color": "rgba(23, 23, 23, 1)",
                        },
                      ],
                    ]
                  }
                >
                  How do I supply liquidity?
                </Text>
                <Text />
              </View>
            </View>
            <View
              pointerEvents="auto"
              style={Object {}}
            >
              <View
                forwardedRef={[Function]}
                onLayout={[Function]}
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Array [
                        Object {
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 0,
                        },
                        Object {
                          "borderBottomWidth": 1,
                        },
                      ],
                      Object {
                        "borderBottomColor": "rgba(229, 229, 229, 1)",
                        "borderLeftColor": "rgba(229, 229, 229, 1)",
                        "borderRightColor": "rgba(229, 229, 229, 1)",
                        "borderTopColor": "rgba(229, 229, 229, 1)",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontFamily": "RegularFont",
                            "fontSize": 16,
                            "fontWeight": "400",
                            "lineHeight": 24,
                          },
                          Array [
                            Object {
                              "flexBasis": "0%",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "fontSize": 14,
                              "lineHeight": 20,
                            },
                            Object {
                              "color": "rgba(82, 82, 82, 1)",
                            },
                          ],
                        ]
                      }
                    >
                      After deciding which pool pair you would like to supply liquidity to, click ADD LIQUIDITY and enter the input amount for either of the tokens in the pair.

Once an amount is entered on one side of the pair, the app automatically balances the amount of the other side, based on the ratio of current liquidity in the pool.
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={Object {}}
          >
            <View
              accessibilityState={
                Object {
                  "expanded": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                      Object {
                        "borderBottomWidth": 1,
                      },
                      false,
                    ],
                    Object {
                      "borderBottomColor": "rgba(229, 229, 229, 1)",
                      "borderLeftColor": "rgba(229, 229, 229, 1)",
                      "borderRightColor": "rgba(229, 229, 229, 1)",
                      "borderTopColor": "rgba(229, 229, 229, 1)",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "fontFamily": "RegularFont",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "lineHeight": 24,
                      },
                      Array [
                        Array [
                          Object {
                            "flexBasis": "0%",
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "fontSize": 14,
                            "lineHeight": 20,
                          },
                          false,
                        ],
                        Object {
                          "color": "rgba(115, 115, 115, 1)",
                        },
                      ],
                    ]
                  }
                >
                  How do I send tokens from my DFI wallet?
                </Text>
                <Text />
              </View>
            </View>
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                  "overflow": "hidden",
                }
              }
            >
              <View
                forwardedRef={[Function]}
                onLayout={[Function]}
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Array [
                        Object {
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 0,
                        },
                        false,
                      ],
                      Object {
                        "borderBottomColor": "rgba(229, 229, 229, 1)",
                        "borderLeftColor": "rgba(229, 229, 229, 1)",
                        "borderRightColor": "rgba(229, 229, 229, 1)",
                        "borderTopColor": "rgba(229, 229, 229, 1)",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontFamily": "RegularFont",
                            "fontSize": 16,
                            "fontWeight": "400",
                            "lineHeight": 24,
                          },
                          Array [
                            Object {
                              "flexBasis": "0%",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "fontSize": 14,
                              "lineHeight": 20,
                            },
                            Object {
                              "color": "rgba(82, 82, 82, 1)",
                            },
                          ],
                        ]
                      }
                    >
                      Tokens on DeFiChain can only be sent to DFI addresses only. This means that you should not send directly to an exchange or a third party platform that does not support DeFiChain.

Similarly, liquidity tokens can only be sent to another DFI wallet address.
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={Object {}}
          >
            <View
              accessibilityState={
                Object {
                  "expanded": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                      Object {
                        "borderBottomWidth": 1,
                      },
                      false,
                    ],
                    Object {
                      "borderBottomColor": "rgba(229, 229, 229, 1)",
                      "borderLeftColor": "rgba(229, 229, 229, 1)",
                      "borderRightColor": "rgba(229, 229, 229, 1)",
                      "borderTopColor": "rgba(229, 229, 229, 1)",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "fontFamily": "RegularFont",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "lineHeight": 24,
                      },
                      Array [
                        Array [
                          Object {
                            "flexBasis": "0%",
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "fontSize": 14,
                            "lineHeight": 20,
                          },
                          false,
                        ],
                        Object {
                          "color": "rgba(115, 115, 115, 1)",
                        },
                      ],
                    ]
                  }
                >
                  What are some exchanges and platforms I can send to?
                </Text>
                <Text />
              </View>
            </View>
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                  "overflow": "hidden",
                }
              }
            >
              <View
                forwardedRef={[Function]}
                onLayout={[Function]}
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Array [
                        Object {
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 0,
                        },
                        false,
                      ],
                      Object {
                        "borderBottomColor": "rgba(229, 229, 229, 1)",
                        "borderLeftColor": "rgba(229, 229, 229, 1)",
                        "borderRightColor": "rgba(229, 229, 229, 1)",
                        "borderTopColor": "rgba(229, 229, 229, 1)",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontFamily": "RegularFont",
                            "fontSize": 16,
                            "fontWeight": "400",
                            "lineHeight": 24,
                          },
                          Array [
                            Object {
                              "flexBasis": "0%",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "fontSize": 14,
                              "lineHeight": 20,
                            },
                            Object {
                              "color": "rgba(82, 82, 82, 1)",
                            },
                          ],
                        ]
                      }
                    >
                      1. Kucoin
2. Bittrex
3. Transak
4. Cake DeFi

View more at DeFiChain.com
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={Object {}}
          >
            <View
              accessibilityState={
                Object {
                  "expanded": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                      Object {
                        "borderBottomWidth": 1,
                      },
                      false,
                    ],
                    Object {
                      "borderBottomColor": "rgba(229, 229, 229, 1)",
                      "borderLeftColor": "rgba(229, 229, 229, 1)",
                      "borderRightColor": "rgba(229, 229, 229, 1)",
                      "borderTopColor": "rgba(229, 229, 229, 1)",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "fontFamily": "RegularFont",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "lineHeight": 24,
                      },
                      Array [
                        Array [
                          Object {
                            "flexBasis": "0%",
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "fontSize": 14,
                            "lineHeight": 20,
                          },
                          false,
                        ],
                        Object {
                          "color": "rgba(115, 115, 115, 1)",
                        },
                      ],
                    ]
                  }
                >
                  Can I send liquidity pool tokens to an exchange or another entity?
                </Text>
                <Text />
              </View>
            </View>
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                  "overflow": "hidden",
                }
              }
            >
              <View
                forwardedRef={[Function]}
                onLayout={[Function]}
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Array [
                        Object {
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 0,
                        },
                        false,
                      ],
                      Object {
                        "borderBottomColor": "rgba(229, 229, 229, 1)",
                        "borderLeftColor": "rgba(229, 229, 229, 1)",
                        "borderRightColor": "rgba(229, 229, 229, 1)",
                        "borderTopColor": "rgba(229, 229, 229, 1)",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontFamily": "RegularFont",
                            "fontSize": 16,
                            "fontWeight": "400",
                            "lineHeight": 24,
                          },
                          Array [
                            Object {
                              "flexBasis": "0%",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "fontSize": 14,
                              "lineHeight": 20,
                            },
                            Object {
                              "color": "rgba(82, 82, 82, 1)",
                            },
                          ],
                        ]
                      }
                    >
                      Liquidity tokens can only be sent to another DFI wallet address, and not to an exchange of central entity.
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={Object {}}
          >
            <View
              accessibilityState={
                Object {
                  "expanded": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingBottom": 16,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 16,
                      },
                      false,
                      false,
                    ],
                    Object {
                      "borderBottomColor": "rgba(229, 229, 229, 1)",
                      "borderLeftColor": "rgba(229, 229, 229, 1)",
                      "borderRightColor": "rgba(229, 229, 229, 1)",
                      "borderTopColor": "rgba(229, 229, 229, 1)",
                    },
                  ]
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "fontFamily": "RegularFont",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "lineHeight": 24,
                      },
                      Array [
                        Array [
                          Object {
                            "flexBasis": "0%",
                            "flexGrow": 1,
                            "flexShrink": 1,
                            "fontSize": 14,
                            "lineHeight": 20,
                          },
                          false,
                        ],
                        Object {
                          "color": "rgba(115, 115, 115, 1)",
                        },
                      ],
                    ]
                  }
                >
                  How do I receive tokens on my DFI wallet?
                </Text>
                <Text />
              </View>
            </View>
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 0,
                  "overflow": "hidden",
                }
              }
            >
              <View
                forwardedRef={[Function]}
                onLayout={[Function]}
                style={Object {}}
              >
                <View
                  style={
                    Array [
                      Array [
                        Object {
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 0,
                        },
                        false,
                      ],
                      Object {
                        "borderBottomColor": "rgba(229, 229, 229, 1)",
                        "borderLeftColor": "rgba(229, 229, 229, 1)",
                        "borderRightColor": "rgba(229, 229, 229, 1)",
                        "borderTopColor": "rgba(229, 229, 229, 1)",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontFamily": "RegularFont",
                            "fontSize": 16,
                            "fontWeight": "400",
                            "lineHeight": 24,
                          },
                          Array [
                            Object {
                              "flexBasis": "0%",
                              "flexGrow": 1,
                              "flexShrink": 1,
                              "fontSize": 14,
                              "lineHeight": 20,
                            },
                            Object {
                              "color": "rgba(82, 82, 82, 1)",
                            },
                          ],
                        ]
                      }
                    >
                      You can receive DFI tokens into your wallet by sharing your address found in the Receive page, or by getting the sender to scan the QR code.

Note that you will not be able to receive native tokens (e.g. BTC, ETH) directly into your wallet.
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RCTScrollView>
`;
