// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`icon button should match snapshot of button with add icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderBottomColor": "rgba(212, 212, 212, 1)",
      "borderBottomLeftRadius": 4,
      "borderBottomRightRadius": 4,
      "borderBottomWidth": 1,
      "borderLeftColor": "rgba(212, 212, 212, 1)",
      "borderLeftWidth": 1,
      "borderRightColor": "rgba(212, 212, 212, 1)",
      "borderRightWidth": 1,
      "borderTopColor": "rgba(212, 212, 212, 1)",
      "borderTopLeftRadius": 4,
      "borderTopRightRadius": 4,
      "borderTopWidth": 1,
      "flexDirection": "row",
      "opacity": 1,
      "paddingBottom": 4,
      "paddingLeft": 4,
      "paddingRight": 4,
      "paddingTop": 4,
    }
  }
  testID="test"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          undefined,
          {
            "color": "rgba(255, 0, 175, 1)",
          },
        ],
        {
          "fontFamily": "material",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`icon button should match snapshot of button with remove icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderBottomColor": "rgba(212, 212, 212, 1)",
      "borderBottomLeftRadius": 4,
      "borderBottomRightRadius": 4,
      "borderBottomWidth": 1,
      "borderLeftColor": "rgba(212, 212, 212, 1)",
      "borderLeftWidth": 1,
      "borderRightColor": "rgba(212, 212, 212, 1)",
      "borderRightWidth": 1,
      "borderTopColor": "rgba(212, 212, 212, 1)",
      "borderTopLeftRadius": 4,
      "borderTopRightRadius": 4,
      "borderTopWidth": 1,
      "flexDirection": "row",
      "opacity": 1,
      "paddingBottom": 4,
      "paddingLeft": 4,
      "paddingRight": 4,
      "paddingTop": 4,
    }
  }
  testID="test"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          undefined,
          {
            "color": "rgba(255, 0, 175, 1)",
          },
        ],
        {
          "fontFamily": "material",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`icon button should match snapshot of button with swap-horiz icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderBottomColor": "rgba(212, 212, 212, 1)",
      "borderBottomLeftRadius": 4,
      "borderBottomRightRadius": 4,
      "borderBottomWidth": 1,
      "borderLeftColor": "rgba(212, 212, 212, 1)",
      "borderLeftWidth": 1,
      "borderRightColor": "rgba(212, 212, 212, 1)",
      "borderRightWidth": 1,
      "borderTopColor": "rgba(212, 212, 212, 1)",
      "borderTopLeftRadius": 4,
      "borderTopRightRadius": 4,
      "borderTopWidth": 1,
      "flexDirection": "row",
      "opacity": 1,
      "paddingBottom": 4,
      "paddingLeft": 4,
      "paddingRight": 4,
      "paddingTop": 4,
    }
  }
  testID="test"
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": undefined,
          "fontSize": 24,
        },
        [
          undefined,
          {
            "color": "rgba(255, 0, 175, 1)",
          },
        ],
        {
          "fontFamily": "material",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    
  </Text>
</View>
`;

exports[`icon button should match snapshot of button with swap-vert icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "rgba(255, 255, 255, 1)",
      "borderBottomColor": "rgba(212, 212, 212, 1)",
      "borderBottomLeftRadius": 4,
      "borderBottomRightRadius": 4,
      "borderBottomWidth": 1,
      "borderLeftColor": "rgba(212, 212, 212, 1)",
      "borderLeftWidth": 1,
      "borderRightColor": "rgba(212, 212, 212, 1)",
      "borderRightWidth": 1,
      "borderTopColor": "rgba(212, 212, 212, 1)",
      "borderTopLeftRadius": 4,
      "borderTopRightRadius": 4,
      "borderTopWidth": 1,
      "flexDirection": "row",
      "opacity": 1,
      "paddingBottom": 4,
      "paddingLeft": 4,
      "paddingRight": 4,
      "paddingTop": 4,
    }
  }
  testID="test"
>
  <Text />
</View>
`;
