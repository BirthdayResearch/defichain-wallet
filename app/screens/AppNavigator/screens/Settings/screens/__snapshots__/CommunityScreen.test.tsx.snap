// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CommunityScreen /> should match snapshot 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  ListFooterComponent={
    <View
      style={
        Object {
          "alignItems": "center",
          "paddingBottom": 24,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 24,
        }
      }
    >
      <ThemedText
        style={
          Object {
            "fontFamily": "RegularFont",
            "fontSize": 12,
            "fontWeight": "400",
            "lineHeight": 16,
          }
        }
      >
        DeFiChain is a community-driven and open project.
      </ThemedText>
      <ThemedText
        style={
          Object {
            "fontFamily": "RegularFont",
            "fontSize": 12,
            "fontWeight": "400",
            "lineHeight": 16,
          }
        }
      >
        The DeFiChain Foundation does not provide direct support.
      </ThemedText>
    </View>
  }
  ListHeaderComponent={
    <ThemedSectionTitle
      testID="community_title"
      text="CONNECT WITH THE COMMUNITY:"
    />
  }
  data={
    Array [
      Object {
        "icon": "github",
        "id": "gh",
        "title": "Report an issue on Github",
        "url": "https://github.com/DeFiCh/wallet/issues",
      },
      Object {
        "icon": "help-circle",
        "id": "faq",
        "title": "Frequently Asked Questions",
        "url": "https://defichain.com/learn/#faq",
      },
      Object {
        "icon": "telegram",
        "id": "tg_en",
        "title": "Telegram (EN)",
        "url": "https://t.me/defiblockchain",
      },
      Object {
        "icon": "telegram",
        "id": "tg_de",
        "title": "Telegram (DE)",
        "url": "https://t.me/defiblockchain_DE",
      },
      Object {
        "icon": "telegram",
        "id": "announcements",
        "title": "Announcements",
        "url": "https://t.me/defichain_announcements",
      },
      Object {
        "icon": "wechat",
        "id": "wechat",
        "title": "WeChat",
        "url": "http://weixin.qq.com/r/0xz07DzEdmEJrXiP90nB",
      },
      Object {
        "icon": "reddit",
        "id": "reddit",
        "title": "Reddit Community",
        "url": "https://www.reddit.com/r/defiblockchain/",
      },
      Object {
        "icon": "web",
        "id": "website",
        "title": "Official Website",
        "url": "https://defichain.com/",
      },
      Object {
        "icon": "magnify",
        "id": "explorer",
        "title": "DeFiScan",
        "url": "https://defiscan.live/",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Array [
      undefined,
      Object {
        "backgroundColor": "rgba(245, 245, 245, 1)",
      },
    ]
  }
  testID="community_flat_list"
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <Text
        style={
          Array [
            Object {
              "fontFamily": "RegularFont",
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
            },
            Array [
              Object {
                "color": "rgba(115, 115, 115, 1)",
                "fontFamily": "MediumFont",
                "fontSize": 12,
                "fontWeight": "500",
                "lineHeight": 16,
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 24,
              },
              Object {
                "backgroundColor": "rgba(245, 245, 245, 1)",
                "color": "rgba(115, 115, 115, 1)",
              },
            ],
          ]
        }
        testID="community_title"
        text="CONNECT WITH THE COMMUNITY:"
      >
        CONNECT WITH THE COMMUNITY:
      </Text>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="gh"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          Report an issue on Github
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 1,
            },
            Object {
              "backgroundColor": "rgba(245, 245, 245, 1)",
            },
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="faq"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          Frequently Asked Questions
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 1,
            },
            Object {
              "backgroundColor": "rgba(245, 245, 245, 1)",
            },
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="tg_en"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          Telegram (EN)
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 1,
            },
            Object {
              "backgroundColor": "rgba(245, 245, 245, 1)",
            },
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="tg_de"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          Telegram (DE)
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 1,
            },
            Object {
              "backgroundColor": "rgba(245, 245, 245, 1)",
            },
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="announcements"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          Announcements
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 1,
            },
            Object {
              "backgroundColor": "rgba(245, 245, 245, 1)",
            },
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="wechat"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          WeChat
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 1,
            },
            Object {
              "backgroundColor": "rgba(245, 245, 245, 1)",
            },
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="reddit"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          Reddit Community
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 1,
            },
            Object {
              "backgroundColor": "rgba(245, 245, 245, 1)",
            },
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="website"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          Official Website
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "height": 1,
            },
            Object {
              "backgroundColor": "rgba(245, 245, 245, 1)",
            },
          ]
        }
      />
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderBottomColor": "rgba(229, 229, 229, 1)",
            "borderBottomWidth": 1,
            "borderLeftColor": "rgba(229, 229, 229, 1)",
            "borderRightColor": "rgba(229, 229, 229, 1)",
            "borderTopColor": "rgba(229, 229, 229, 1)",
            "flexDirection": "row",
            "opacity": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          }
        }
        testID="explorer"
      >
        <Text />
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "marginLeft": 8,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          DeFiScan
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "paddingBottom": 24,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 24,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "fontFamily": "RegularFont",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "lineHeight": 16,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          DeFiChain is a community-driven and open project.
        </Text>
        <Text
          style={
            Array [
              Object {
                "fontFamily": "RegularFont",
                "fontSize": 16,
                "fontWeight": "400",
                "lineHeight": 24,
              },
              Array [
                Object {
                  "fontFamily": "RegularFont",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "lineHeight": 16,
                },
                Object {
                  "color": "rgba(0, 0, 0, 1)",
                },
              ],
            ]
          }
        >
          The DeFiChain Foundation does not provide direct support.
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
