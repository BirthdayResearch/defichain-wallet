// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`icon button should match snapshot of button with add icon 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="test"
>
  <View
    accessible={true}
    style={
      Object {
        "backgroundColor": "rgba(255, 255, 255, 1)",
        "borderBottomColor": "rgba(209, 213, 219, 1)",
        "borderBottomLeftRadius": 4,
        "borderBottomRightRadius": 4,
        "borderBottomWidth": 1,
        "borderLeftColor": "rgba(209, 213, 219, 1)",
        "borderLeftWidth": 1,
        "borderRightColor": "rgba(209, 213, 219, 1)",
        "borderRightWidth": 1,
        "borderTopColor": "rgba(209, 213, 219, 1)",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "borderTopWidth": 1,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 24,
          },
          Object {
            "color": "rgba(255, 0, 175, 1)",
          },
          Object {
            "fontFamily": "material",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</RNGestureHandlerButton>
`;

exports[`icon button should match snapshot of button with remove icon 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="test"
>
  <View
    accessible={true}
    style={
      Object {
        "backgroundColor": "rgba(255, 255, 255, 1)",
        "borderBottomColor": "rgba(209, 213, 219, 1)",
        "borderBottomLeftRadius": 4,
        "borderBottomRightRadius": 4,
        "borderBottomWidth": 1,
        "borderLeftColor": "rgba(209, 213, 219, 1)",
        "borderLeftWidth": 1,
        "borderRightColor": "rgba(209, 213, 219, 1)",
        "borderRightWidth": 1,
        "borderTopColor": "rgba(209, 213, 219, 1)",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "borderTopWidth": 1,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 24,
          },
          Object {
            "color": "rgba(255, 0, 175, 1)",
          },
          Object {
            "fontFamily": "material",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</RNGestureHandlerButton>
`;

exports[`icon button should match snapshot of button with swap-horiz icon 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="test"
>
  <View
    accessible={true}
    style={
      Object {
        "backgroundColor": "rgba(255, 255, 255, 1)",
        "borderBottomColor": "rgba(209, 213, 219, 1)",
        "borderBottomLeftRadius": 4,
        "borderBottomRightRadius": 4,
        "borderBottomWidth": 1,
        "borderLeftColor": "rgba(209, 213, 219, 1)",
        "borderLeftWidth": 1,
        "borderRightColor": "rgba(209, 213, 219, 1)",
        "borderRightWidth": 1,
        "borderTopColor": "rgba(209, 213, 219, 1)",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "borderTopWidth": 1,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 24,
          },
          Object {
            "color": "rgba(255, 0, 175, 1)",
          },
          Object {
            "fontFamily": "material",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</RNGestureHandlerButton>
`;

exports[`icon button should match snapshot of button with swap-vert icon 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="test"
>
  <View
    accessible={true}
    style={
      Object {
        "backgroundColor": "rgba(255, 255, 255, 1)",
        "borderBottomColor": "rgba(209, 213, 219, 1)",
        "borderBottomLeftRadius": 4,
        "borderBottomRightRadius": 4,
        "borderBottomWidth": 1,
        "borderLeftColor": "rgba(209, 213, 219, 1)",
        "borderLeftWidth": 1,
        "borderRightColor": "rgba(209, 213, 219, 1)",
        "borderRightWidth": 1,
        "borderTopColor": "rgba(209, 213, 219, 1)",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "borderTopWidth": 1,
        "opacity": 1,
        "paddingBottom": 4,
        "paddingLeft": 4,
        "paddingRight": 4,
        "paddingTop": 4,
      }
    }
  >
    <Text />
  </View>
</RNGestureHandlerButton>
`;
