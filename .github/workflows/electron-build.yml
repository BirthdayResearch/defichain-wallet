name: Electron Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.result }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0

      - uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0 # tag=v6.3.3
        id: version
        with:
          script: |
            const [date] = new Date().toISOString().split('T')
            const build = '0.0.' + date.replace(/[^0-9]/g, '')
            console.log(build)
            return build

          result-encoding: string

  build_linux_version:
    runs-on: ubuntu-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: 16

      - run: npm ci

      - run: |
          git config --global user.email "github-bot@defichain.com"
          git config --global user.name "defichain-bot"
          npx standard-version --release-as ${{ needs.version.outputs.version }}

      - name: Build app
        working-directory: ./desktop-app
        run: npm run build:electron

      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v7.2.0
        with:
          name: linux-build
          path: './desktop-app/dist/DeFiChain Wallet-${{needs.version.outputs.version}}.AppImage'

  build_mac_version:
    environment: Electron Release
    runs-on: macos-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: 16

      - run: npm ci

      - run: |
          git config --global user.email "github-bot@defichain.com"
          git config --global user.name "defichain-bot"
          npx standard-version --release-as ${{ needs.version.outputs.version }}

      - name: Build app
        working-directory: ./desktop-app
        run: npm run build:electron
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CI: true
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}

      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v7.2.0
        with:
          name: mac-build
          path: './desktop-app/dist/DeFiChain Wallet-${{ needs.version.outputs.version }}.dmg'

  build_windows_version:
    runs-on: windows-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3.5.1
        with:
          node-version: 16

      - run: npm ci

      - run: |
          git config --global user.email "github-bot@defichain.com"
          git config --global user.name "defichain-bot"
          npx standard-version --release-as ${{ needs.version.outputs.version }}

      - name: Build app
        working-directory: ./desktop-app
        run: npm run build:electron
        shell: powershell

      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v7.2.0
        with:
          name: win-build
          path: './desktop-app/dist/DeFiChain Wallet Setup ${{ needs.version.outputs.version }}.exe'
