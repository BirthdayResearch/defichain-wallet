name: EAS Publish

on:
  release:
    types: [ created ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.result }}
    steps:
      - uses: actions/github-script@9ac08808f993958e9de277fe43a64532a609130e
        id: version
        with:
          script: |
            const semver = context.ref.replace('refs/tags/v', '')
            if (semver.match(/^[0-9]+\.[0-9]+\.[0-9]+$/)) {
              return semver
            }

            throw new Error('not semver')
          result-encoding: string

  expo-prelease:
    name: Expo Prelease
    environment: Expo Release
    runs-on: ubuntu-latest
    if: github.event.release.prerelease
    needs: [ version ]
    steps:
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846
      - uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a
        with:
          node-version: 16

      - uses: expo/expo-github-action@a522d656e4f6d826cb2c33e4959cac1c13ba4067
        with:
          expo-version: 4.x
          packager: npm
          token: ${{ secrets.EXPO_TOKEN }}

      - run: npm ci

      - run: |
          git config --global user.email "github-bot@defichain.com"
          git config --global user.name "defichain-bot"
          npx standard-version --release-as ${{needs.version.outputs.version}}

      - name: Publish Prerelease
        run: expo publish --release-channel=prerelease

  eas-release:
    name: EAS Release
    environment: EAS Release
    runs-on: ubuntu-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846
      - uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a
        with:
          node-version: 16

      - uses: expo/expo-github-action@a522d656e4f6d826cb2c33e4959cac1c13ba4067
        with:
          eas-version: latest
          expo-version: 4.x
          packager: npm
          token: ${{ secrets.EXPO_TOKEN }}

      - run: npm ci

      - run: |
          git config --global user.email "github-bot@defichain.com"
          git config --global user.name "defichain-bot"
          npx standard-version --release-as ${{needs.version.outputs.version}}

      - name: EAS Build - iOS & Android
        run: eas build --platform all --non-interactive --wait

      - run: sleep 10s

      - name: EAS Submit - Android - Setup
        run: echo "$ANDROID_SERVICE_ACCOUNT_JSON" > ANDROID_SERVICE_ACCOUNT.json
        env:
          ANDROID_SERVICE_ACCOUNT_JSON: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}

      - name: EAS Submit - Android - Submit
        run: eas submit --platform android --latest

      - name: EAS Submit - Android - Cleanup
        run: rm ANDROID_SERVICE_ACCOUNT.json
        if: always()

      # TODO(fuxingloh): replace this in the future
      - name: EAS Submit - iOS - Setup
        run: |
          sed -i "s/EAS_APPLE_ID/$APPLE_ID/" eas.json
          sed -i "s/EAS_ASC_APP_ID/$ASC_APP_ID/" eas.json
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          ASC_APP_ID: ${{ secrets.ASC_APP_ID }}

      - name: EAS Submit - iOS - Submit
        run: eas submit --platform ios --latest
        env:
          EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}

      - name: EAS Submit - iOS - Cleanup
        run: rm eas.json
        if: always()
